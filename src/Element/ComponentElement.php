<?php

namespace Drupal\ui_patterns\Element;

use Drupal\sdc\Element\ComponentElement as SdcComponentElement;
use Drupal\sdc\Utilities;

/**
 * Override Drupal\sdc\Element\ComponentElement.
 *
 * @RenderElement("component")
 */
class ComponentElement extends SdcComponentElement {

  /**
   * {@inheritdoc}
   *
   * Duplicated because generateComponentTemplate() is private.
   */
  public function preRenderComponent(array $element): array {
    $props = $element['#props'];
    $props_alter_callbacks = $element['#propsAlter'];
    // This callback can be used to prepare the context. For instance to replace
    // tokens in the props.
    $props = array_reduce(
      $props_alter_callbacks,
      fn(array $carry, callable $callback) => $this->doTrustedCallback(
        $callback,
        [$carry],
        '%s is not trusted',
      ),
      $props
    );
    $inline_template = $this->generateComponentTemplate(
      $element['#component'],
      $element['#slots'],
      $element['#slotsAlter'],
      $props,
    );
    $element['inline-template'] = [
      '#type' => 'inline_template',
      '#template' => $inline_template,
      '#context' => $props,
    ];
    return $element;
  }

  /**
   * {@inheritdoc}
   *
   * Related SDC issue: https://www.drupal.org/project/drupal/issues/3391702
   */
  private function generateComponentTemplate(
    string $id,
    array $slots,
    array $slots_alter_callbacks,
    array &$context,
  ): string {
    $template = '{# This template was dynamically generated by sdc #}' . PHP_EOL;
    $template .= sprintf('{%% embed \'%s\' %%}', $id);
    $template .= PHP_EOL;
    foreach ($slots as $slot_name => $slot_value) {
      if (!Utilities::isRenderArray($slot_value) && \is_scalar($slot_value)) {
        $slot_value = [
          "#plain_text" => (string) $slot_value,
        ];
      }
      $context[$slot_name] = array_reduce(
        $slots_alter_callbacks,
        fn(array $carry, callable $callback) => $this->doTrustedCallback(
          $callback,
          [$carry, $context],
          '%s is not trusted',
        ),
        $slot_value
      );
      $template .= "  {% block $slot_name %}" . PHP_EOL
        . "    {{ $slot_name }}" . PHP_EOL
        . "  {% endblock %}" . PHP_EOL;
    }
    $template .= '{% endembed %}' . PHP_EOL;
    return $template;
  }

}
