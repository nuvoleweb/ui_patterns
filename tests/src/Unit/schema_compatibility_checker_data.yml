# String prop type
- label: "String prop type"
  schema:
    type: string
  tests:
    - label: "String"
      schema:
        type: string
      result: true
    - label: "String with a format"
      schema:
        type: string
        format: whatever
      result: true
    - label: "String with max length"
      schema:
        type: string
        maxLength: 10
      result: true

# Other string tests
- label: "String with max length"
  schema:
    type: string
    maxLength: 10
  tests:
    - label: "No length"
      schema:
        type: string
      result: false
    - label: "Same max length"
      schema:
        type: string
        maxLength: 10
      result: true
    - label: "Smaller max length"
      schema:
        type: string
        maxLength: 5
      result: true
    - label: "Larger max length"
      schema:
        type: string
        maxLength: 20
      result: false
- label: "String with min length"
  schema:
    type: string
    minLength: 10
  tests:
    - label: "No length"
      schema:
        type: string
      result: false
    - label: "Same min length"
      schema:
        type: string
        minLength: 10
      result: true
    - label: "Smaller min length"
      schema:
        type: string
        minLength: 5
      result: false
    - label: "Larger min length"
      schema:
        type: string
        minLength: 20
      result: true

# Enum prop type
- label: "Enum prop type"
  schema:
    type: [string, number, integer]
    enum: []
  tests:
    - label: "Empty enum"
      schema:
        type: string
        enum: []
      result: true
    - label: "With strings"
      schema:
        type: string
        enum:
          - foo
          - bar
          - baz
      result: true
    - label: "With numbers"
      schema:
        type: number
        enum:
          - 4
          - 5
          - 8
      result: true

# Other enum tests
- label: "Enum with 2 strings"
  schema:
    type: string
    enum:
      - foo
      - bar
  tests:
    - label: "Same enum"
      schema:
        type: string
        enum:
          - foo
          - bar
      result: true
    - label: "Enum with an addition"
      schema:
        type: string
        enum:
          - foo
          - bar
          - baz
      result: false
    - label: "Enum with a removal"
      schema:
        type: string
        enum:
          - foo
      result: true

# Number prop type
- label: "Number prop type"
  schema:
    type: number
  tests:
    - label: "Number"
      schema:
        type: number
      result: true
    - label: "Integer"
      schema:
        type: integer
      result: true

# Url prop type
- label: "URL prop type"
  schema:
    type: string
    format: iri-reference
  tests:
    - label: "IRI Reference"
      schema:
        type: string
        format: iri-reference
      result: true
    - label: "URI reference"
      schema:
        type: string
        format: uri-reference
      result: true
    - label: "IRI"
      schema:
        type: string
        format: iri
      result: true
    - label: "URI"
      schema:
        type: string
        format: uri
      result: true

# Color prop type
- label: "Color prop type"
  schema:
    type: string
    pattern: "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$"
  tests:
    - label: "Color (6 or 3 hex)"
      schema:
        type: string
        pattern: "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$"
      result: true
#    - label: "Color (6)"
#      schema:
#        type: string
#        pattern: "^#([A-Fa-f0-9]{6})$"
#      result: true
#    - label: "Color (3)"
#      schema:
#        type: string
#        pattern: "^#([A-Fa-f0-9]{3})$"
#      result: true

# Links prop type
- label: "Links prop type"
  schema:
    type: array
    items:
      type: object
      properties:
        title: { type: string }
        attributes: { $ref: "ui-patterns://attributes" }
        below: { $ref: "ui-patterns://links" }
  tests:
    - label: "Links"
      schema:
        type: array
        items:
          type: object
          properties:
            title: { type: string }
            attributes: { $ref: "ui-patterns://attributes" }
            below: { $ref: "ui-patterns://links" }
      result: true
    - label: "Links with extra property on"
      schema:
        type: array
        items:
          type: object
          properties:
            title: { type: string }
            attributes: { $ref: "ui-patterns://attributes" }
            below: { $ref: "ui-patterns://links" }
            extra: { type: string }
      result: true
    - label: "Simple array"
      schema:
        type: array
      result: false
